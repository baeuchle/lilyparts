#!/bin/bash

[[ -t 1 ]] && makeColoredOutput=0 || makeColoredOutput=1;
loglevel="BASIC"
includedir="$(dirname $0)"
LILYOPTS="--include $includedir"
LILYEXE="$(which lilypond)"
GITEXE="$(which git)"
GITOPT="describe --tags --dirty --always"
usegit=0 # 0: true, 1: false
files=()

function help {
echo "

lilysplit - compile lilypond files for several voices.

USAGE:
    $0 [options] file [file...]

--color
--nocolor
        Color output from this script, or not
--loglevel LEVEL
        Sets the lilypond debug level.
--lilyoptions OPT
        Adds OPT to the options passed to lilypond
--lilyexe EXE
        Use EXE for lilypond system calls. This should be unnecessary if
        lilypond is inside your \$PATH.
--gitexe EXE
        Use EXE for reading the version from git
--gitopt OPT
        Pass OPT to git. Default: "$GITOPT".
--usegit (default), --nogit
        Do or do not use git at all.

"
}

while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    --color)
      makeColoredOutput=0;
      shift;;
    --nocolor)
      makeColoredOutput=1;
      shift;;
    --loglevel)
      loglevel=$2;
      LILYOPTS="$LILYOPTS --loglevel=$2";
      shift; shift;;
    --lilyoptions)
      LILYOPTS="$LILYOPTS $2";
      shift; shift;;
    --lilyexe)
      LILYEXE="$2";
      shift; shift;;
    --gitexe)
      GITEXE="$2";
      shift; shift;;
    --gitopt)
      GITOPT="$2";
      shift; shift;;
    --usegit)
      usegit=0;
      shift;;
    --nogit)
      usegit=1;
      shift;;
    --help)
      help
      exit 0;;
    --)
      shift;
      break;;
    *)
      files+=($key);
      shift;;
  esac
done

files+=($*)

####COLORIZE OUTPUT####
if [[ "$makeColoredOutput" -eq 0 ]]; then
  noColor="\e[0m"
  headlineColor="\e[0m\e[1m"
  versionColor="\e[0m\e[1;32m"
  slimVersionColor="\e[0m\e[4;32m"
  fileColor="\e[0m\e[4;30m"
  errorColor="\e[0m\e[1;31m"
  warningColor="\e[0m\e[0;31m"
  progressColor="\e[0m\e[1;34m"
  excerptColor="\e[0m\e[35m"
fi

if [ -x "$LILYEXE" ]; then
  true
else
  echo -e "${headlineColor}lilypond${errorColor} not found, please use $fileColor--lilyexe /path/to/lilypond$noColor" >&2
  exit 1;
fi
if [ $usegit -eq 0 ]; then
  if [ -x "$GITEXE" ]; then
    true
  else
    echo -e "${headlineColor}git${warningColor} not found, please use $fileColor--gitexe /path/to/git$warningColor or $fileColor--nogit$noColor" >&2
    usegit=1
  fi
fi

lilyver=""
if [ $usegit -eq 0 ]; then
    cd $includedir;
    lilyver="$($GITEXE $GITOPT)"
    lilyver="${lilyver/v/l}"
    cd - >/dev/null
fi

nomidi="-dmidi-extension=midirm"
echo -e "Starting ${headlineColor}lilysplit$noColor using $versionColor$lilyver$noColor"

for D in "${files[@]}"; do
    d=${D/.ly/}
    d=$(echo $d | sed 's/\/$//')
    b=$(basename $d)
    # look for version information for each lilypond file separately:
    if [ $usegit -eq 0 ]; then
        cd $(dirname $d)
        version="$($GITEXE $GITOPT)"
        cd - > /dev/null
    else
        version=""
    fi
    echo -e "Compiling $headlineColor$d$noColor, Version $versionColor$version$noColor"
    whatwedoinfo="($fileColor$d$noColor $slimVersionColor$version $lilyver$noColor)"
    # Normale Version:
    # (wir löschen später alles, was mit midirm aufhört)
    echo -e "${progressColor}Complete Score$noColor $whatwedoinfo"
    $LILYEXE $LILYOPTS $nomidi -e "(begin (define lilyver \"$lilyver\") (define gitver \"$version\"))" $d.ly;
    if [ $? -eq 1 ]; then
      echo -e "${errorColor}Compilation failed!$noColor"
      continue;
    fi
    mv $b-.pdf $b.pdf
    # MIDI-Version (wir löschen nachher auch das ps)
    echo -e "${progressColor}Midi Version$noColor $whatwedoinfo"
    $LILYEXE $LILYOPTS --ps -dmidi-extension=midi -e "(begin (define lilyver \"$lilyver\") (define gitver \"$version\") (define makeMidi #t))" $d.ly;
    if [ $? -eq 1 ]; then
      echo -e "${errorColor}Compilation failed!$noColor"
      continue;
    fi
    mv $b-midi.midi $b.midi
    # Stimmen:
    namen=(unused Eins Zwei Drei Vier Bass Drum Okta Elec Quer Saxo Saxb)
    for s in $(seq 1 $(((${#namen[@]}-1)))); do
        has="has${namen[$s]}";
        show="show${namen[$s]}";
        if [ "$(grep -q $has $d.ly; echo $?)" == "0" ]; then
            echo -e "${progressColor}Excerpt $s$noColor: $excerptColor${namen[$s]}$noColor $whatwedoinfo"
            $LILYEXE $LILYOPTS $nomidi -e "(begin (define lilyver \"$lilyver\") (define gitver \"$version\") (define showAlle #f) (define $show #t))" "$d.ly";
            if [ $? -eq 1 ]; then
              echo -e "${errorColor}Compilation failed!$noColor"
              break;
            fi
        else
            echo -e "${warningColor}No excerpt $s$noColor: $excerptColor${namen[$s]}$noColor"
        fi;
    done;
    rm $b*midirm;
    rm $b-midi.ps
done
